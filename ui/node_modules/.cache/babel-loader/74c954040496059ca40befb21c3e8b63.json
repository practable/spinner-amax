{"remainingRequest":"/home/david/spinner-amax/ui/node_modules/thread-loader/dist/cjs.js!/home/david/spinner-amax/ui/node_modules/babel-loader/lib/index.js!/home/david/spinner-amax/ui/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/home/david/spinner-amax/ui/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/david/spinner-amax/ui/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/david/spinner-amax/ui/src/components/Stopwatch.vue?vue&type=template&id=d6a02ec4&scoped=true","dependencies":[{"path":"/home/david/spinner-amax/ui/src/components/Stopwatch.vue","mtime":1653472124341},{"path":"/home/david/spinner-amax/ui/babel.config.js","mtime":1653472124337},{"path":"/home/david/spinner-amax/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/spinner-amax/ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/spinner-amax/ui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/david/spinner-amax/ui/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/home/david/spinner-amax/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/spinner-amax/ui/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlRWxlbWVudFZOb2RlIGFzIF9jcmVhdGVFbGVtZW50Vk5vZGUsIG9wZW5CbG9jayBhcyBfb3BlbkJsb2NrLCBjcmVhdGVFbGVtZW50QmxvY2sgYXMgX2NyZWF0ZUVsZW1lbnRCbG9jaywgY3JlYXRlQ29tbWVudFZOb2RlIGFzIF9jcmVhdGVDb21tZW50Vk5vZGUsIHB1c2hTY29wZUlkIGFzIF9wdXNoU2NvcGVJZCwgcG9wU2NvcGVJZCBhcyBfcG9wU2NvcGVJZCB9IGZyb20gInZ1ZSI7Cgp2YXIgX3dpdGhTY29wZUlkID0gZnVuY3Rpb24gX3dpdGhTY29wZUlkKG4pIHsKICByZXR1cm4gX3B1c2hTY29wZUlkKCJkYXRhLXYtZDZhMDJlYzQiKSwgbiA9IG4oKSwgX3BvcFNjb3BlSWQoKSwgbjsKfTsKCnZhciBfaG9pc3RlZF8xID0gewogIGNsYXNzOiAibS0yIHAtMiBiZy13aGl0ZSBib3JkZXIgcm91bmRlZCBzdG9wd2F0Y2gtY29udGFpbmVyIiwKICBpZDogInN0b3B3YXRjaC1jb250YWluZXIiCn07CnZhciBfaG9pc3RlZF8yID0gewogIGNsYXNzOiAicm93LXNtIG1iLTIiCn07CnZhciBfaG9pc3RlZF8zID0gewogIGNsYXNzOiAiZm9ybS1ncm91cCIKfTsKdmFyIF9ob2lzdGVkXzQgPSBbInZhbHVlIl07CnZhciBfaG9pc3RlZF81ID0gewogIGNsYXNzOiAiY29sIHBiLTIgZC1ncmlkIGdhcC0yIGQtbWQtYmxvY2siCn07CmV4cG9ydCBmdW5jdGlvbiByZW5kZXIoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiZGl2IiwgX2hvaXN0ZWRfMSwgW19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzIsIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8zLCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiaW5wdXQiLCB7CiAgICB0eXBlOiAidGV4dCIsCiAgICBjbGFzczogImZvcm0tY29udHJvbCIsCiAgICBpZDogInN0b3B3YXRjaCIsCiAgICB2YWx1ZTogJGRhdGEudGltZV9zdHJpbmcsCiAgICByZWFkb25seTogIiIKICB9LCBudWxsLCA4LCBfaG9pc3RlZF80KV0pXSksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzUsIFshJGRhdGEuaXNUaW1pbmcgPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJidXR0b24iLCB7CiAgICBrZXk6IDAsCiAgICBjbGFzczogImJ0biBidG4tZGVmYXVsdCBidG4teHMgbWUtMiIsCiAgICBpZDogInN0YXJ0IiwKICAgIG9uQ2xpY2s6IF9jYWNoZVswXSB8fCAoX2NhY2hlWzBdID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gJG9wdGlvbnMuc3RhcnRUaW1lciAmJiAkb3B0aW9ucy5zdGFydFRpbWVyLmFwcGx5KCRvcHRpb25zLCBhcmd1bWVudHMpOwogICAgfSkKICB9LCAiU3RhcnQiKSkgOiBfY3JlYXRlQ29tbWVudFZOb2RlKCIiLCB0cnVlKSwgJGRhdGEuaXNUaW1pbmcgPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJidXR0b24iLCB7CiAgICBrZXk6IDEsCiAgICBjbGFzczogImJ0biBidG4tZGVmYXVsdCBidG4teHMgbWUtMiIsCiAgICBpZDogInBhdXNlIiwKICAgIG9uQ2xpY2s6IF9jYWNoZVsxXSB8fCAoX2NhY2hlWzFdID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gJG9wdGlvbnMucGF1c2VUaW1lciAmJiAkb3B0aW9ucy5wYXVzZVRpbWVyLmFwcGx5KCRvcHRpb25zLCBhcmd1bWVudHMpOwogICAgfSkKICB9LCAiUGF1c2UiKSkgOiBfY3JlYXRlQ29tbWVudFZOb2RlKCIiLCB0cnVlKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiYnV0dG9uIiwgewogICAgY2xhc3M6ICJidG4gYnRuLWRlZmF1bHQgYnRuLXhzIG1lLTIiLAogICAgaWQ6ICJyZXNldCIsCiAgICBvbkNsaWNrOiBfY2FjaGVbMl0gfHwgKF9jYWNoZVsyXSA9IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuICRvcHRpb25zLnJlc2V0VGltZXIgJiYgJG9wdGlvbnMucmVzZXRUaW1lci5hcHBseSgkb3B0aW9ucywgYXJndW1lbnRzKTsKICAgIH0pCiAgfSwgIlJlc2V0IildKV0pOwp9"},{"version":3,"sources":["/home/david/spinner-amax/ui/src/components/Stopwatch.vue"],"names":[],"mappings":";;;;;;;AAGS,EAAA,KAAK,EAAC,qD;AAAsD,EAAA,EAAE,EAAC;;;AAC3D,EAAA,KAAK,EAAC;;;AACF,EAAA,KAAK,EAAC;;;;AAEV,EAAA,KAAK,EAAC;;;uBAJf,mBAAA,CASM,KATN,EAAA,UAAA,EASM,CARF,mBAAA,CAEM,KAFN,EAAA,UAAA,EAEM,CADF,mBAAA,CAAmH,KAAnH,EAAA,UAAA,EAAmH,CAA3F,mBAAA,CAAqF,OAArF,EAAqF;AAA9E,IAAA,IAAI,EAAC,MAAyE;AAAlE,IAAA,KAAK,EAAC,cAA4D;AAA7C,IAAA,EAAE,EAAC,WAA0C;AAA7B,IAAA,KAAK,EAAE,KAAA,CAAA,WAAsB;AAAT,IAAA,QAAQ,EAAR;AAAS,GAArF,E,IAAA,E,CAAA,E,UAAA,CAA2F,CAAnH,CACE,CAFN,CAQE,EALF,mBAAA,CAIM,KAJN,EAAA,UAAA,EAIM,C,CAHiD,KAAA,CAAA,Q,kBAAnD,mBAAA,CAA0G,QAA1G,EAA0G;UAAA;AAAlG,IAAA,KAAK,EAAC,6BAA4F;AAA7C,IAAA,EAAE,EAAC,OAA0C;AAAjC,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,QAAA,CAAA,UAAA,IAAA,QAAA,CAAA,UAAA,OAAA,QAAA,YAAF;AAAA,KAAA;AAA4B,GAA1G,EAA4F,OAA5F,C,iCAGE,EAFgD,KAAA,CAAA,Q,kBAAlD,mBAAA,CAAyG,QAAzG,EAAyG;UAAA;AAAjG,IAAA,KAAK,EAAC,6BAA2F;AAA7C,IAAA,EAAE,EAAC,OAA0C;AAAjC,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,QAAA,CAAA,UAAA,IAAA,QAAA,CAAA,UAAA,OAAA,QAAA,YAAF;AAAA,KAAA;AAA4B,GAAzG,EAA2F,OAA3F,C,iCAEE,EADF,mBAAA,CAAyF,QAAzF,EAAyF;AAAjF,IAAA,KAAK,EAAC,6BAA2E;AAA7C,IAAA,EAAE,EAAC,OAA0C;AAAjC,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,QAAA,CAAA,UAAA,IAAA,QAAA,CAAA,UAAA,OAAA,QAAA,YAAF;AAAA,KAAA;AAA4B,GAAzF,EAA2E,OAA3E,CACE,CAJN,CAKE,CATN,C","sourcesContent":["//Vue3 updated\n\n<template>\n    <div class='m-2 p-2 bg-white border rounded stopwatch-container' id='stopwatch-container'>\n        <div class=\"row-sm mb-2\">\n            <div class='form-group'><input type='text' class='form-control' id=\"stopwatch\" :value=\"time_string\" readonly></div>\n        </div>\n        <div class=\"col pb-2 d-grid gap-2 d-md-block\">\n            <button class=\"btn btn-default btn-xs me-2\" v-if=\"!isTiming\" id=\"start\" @click=\"startTimer\">Start</button>\n            <button class=\"btn btn-default btn-xs me-2\" v-if=\"isTiming\" id=\"pause\" @click=\"pauseTimer\">Pause</button>\n            <button class=\"btn btn-default btn-xs me-2\" id=\"reset\" @click=\"resetTimer\">Reset</button>\n        </div>\n    </div> \n</template>\n\n<script>\n\nexport default {\n    name: \"Stopwatch\",\n    data(){\n        return{\n            isTiming: false,\n            timerID: 0,\n            start_time: 0,\n            current_time: 0,        //timer in millseconds\n            time_string: \"\"\n        }\n    },\n    created(){\n        this.isTiming = false;\n        this.time_string = this.millsecondsFormatted(this.current_time);\n    },\n    methods:{\n        startTimer(){ \n            this.isTiming = true;\n            this.start_time = Date.now();\n            this.timerID = setInterval(() => {\n                this.updateTime()\n            }, 10);\n\n        },\n        pauseTimer(){\n            this.isTiming = false;\n            clearInterval(this.timerID);\n        },\n        resetTimer(){\n            this.current_time = 0;\n            this.time_string = this.millsecondsFormatted(this.current_time);\n        },\n        updateTime(){\n            this.current_time = Date.now() - this.start_time;\n            this.time_string = this.millsecondsFormatted(this.current_time);\n            \n        },\n        millsecondsFormatted(ms){\n            let millseconds = ms % 1000;\n            let seconds = Math.floor(ms / 1000);\n            let minutes = Math.floor(seconds / 60);\n            seconds = seconds % 60;     //seconds left after minutes removed\n            let hours = Math.floor(minutes / 60);\n            minutes = minutes % 60;     //minutes left after hours removed\n\n            if(hours >= 100){\n                this.current_time = 0;\n            }\n\n            let hour_string = hours < 10 ? '0' + hours.toString() : hours.toString();\n            let minute_string = minutes < 10 ? '0' + minutes.toString() : minutes.toString();\n            let second_string = seconds < 10 ? '0' + seconds.toString() : seconds.toString();\n            let millsecond_string = millseconds.toString();\n\n            return hour_string + \":\" + minute_string + \":\" + second_string + \".\" + millsecond_string;\n\n        }\n    },\n    computed:{\n        \n\n    }\n}\n\n\n</script>\n\n<style scoped>\n.stopwatch-container{\n    position: relative;\n    max-width: 40%;\n    min-width: 300px;\n    min-height: 100px;\n}\n\n#stopwatch{\n    font-size: 14;\n    text-align: center;\n    width: 100%;\n}\n\n\n#start       {background-color: rgb(3, 248, 12);}\n#start:hover {background-color: #3e8e41} \n\n#pause       {background-color: #e13131ff;}\n#pause:hover {background-color: #cc1e1eff;}\n\n#reset  {background-color: #e17a31ff;}\n#reset:hover  {background-color: #cc661eff;}\n\n</style>"],"sourceRoot":""}]}