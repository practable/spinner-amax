{"remainingRequest":"/home/david/practable/spinner-amax/ui/node_modules/babel-loader/lib/index.js!/home/david/practable/spinner-amax/ui/node_modules/eslint-loader/index.js??ref--14-0!/home/david/practable/spinner-amax/ui/src/modules/logging.js","dependencies":[{"path":"/home/david/practable/spinner-amax/ui/src/modules/logging.js","mtime":1653472124341},{"path":"/home/david/practable/spinner-amax/ui/babel.config.js","mtime":1653472124337},{"path":"/home/david/practable/spinner-amax/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/practable/spinner-amax/ui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/david/practable/spinner-amax/ui/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuanNvbi5zdHJpbmdpZnkuanMiOwovL1N0b3JlIGZvciB0aGUgbG9nZ2luZyBiYWNrZ3JvdW5kIGRhdGEuCgovKipMb2dnaW5nIGRhdGE6CgogICAgY2xpY2tzIC0+IGxpc3Qgb2YgYWxsIGNsaWNrcyBvbiBVSSwgdGFyZ2V0IGRpdiwgc2NyZWVuIHBvc2l0aW9uLCBkaXYgcG9zaXRpb24sIHRpbWUKICAgIHNlc3Npb25fdGltZSAtPiBzdGFydCBhbmQgZW5kIG9mIHNlc3Npb24gdGltZSBhcyBhIERhdGUgb2JqZWN0CgoqKi8KdmFyIGxvZ2dpbmdTdG9yZSA9IHsKICBzdGF0ZTogZnVuY3Rpb24gc3RhdGUoKSB7CiAgICByZXR1cm4gewogICAgICBsb2dTb2NrZXQ6IG51bGwsCiAgICAgIHV1aWQ6ICcnLAogICAgICBsb2dnaW5nX2NvbnNlbnRfZ2l2ZW46IGZhbHNlLAogICAgICAvL2hhcmR3YXJlOiAnJywKICAgICAgLy9jbGlja3M6IFtdLCAgICAgICAgICAgICAvL2RvIEkgbmVlZCB0byBpbnRlcm5hbGx5IHN0b3JlIHRoaXM/CiAgICAgIHNlc3Npb25fdGltZTogewogICAgICAgIHN0YXJ0OiBEYXRlLm5vdygpLAogICAgICAgIC8vd2lsbCBiZSB1cGRhdGVkCiAgICAgICAgZW5kOiBEYXRlLm5vdygpLAogICAgICAgIHByZXZpb3VzOiBEYXRlLm5vdygpLAogICAgICAgIHRvdGFsOiAwCiAgICAgIH0sCiAgICAgIC8vY29tcG9uZW50c19vcGVuZWQ6IFtdLCAgICAgIC8ve25hbWU6ICdncmFwaCd9IC8vZG8gSSBuZWVkIHRvIGludGVybmFsbHkgc3RvcmUgdGhpcz8KICAgICAgcGFyYW1ldGVyczogW10gLy9kbyBJIG5lZWQgdG8gaW50ZXJuYWxseSBzdG9yZSB0aGlzPwoKICAgIH07CiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIFNFVF9MT0dfU09DS0VUOiBmdW5jdGlvbiBTRVRfTE9HX1NPQ0tFVChzdGF0ZSwgc29ja2V0KSB7CiAgICAgIHN0YXRlLmxvZ1NvY2tldCA9IHNvY2tldDsKICAgIH0sCiAgICBTRVRfTE9HR0lOR19DT05TRU5UOiBmdW5jdGlvbiBTRVRfTE9HR0lOR19DT05TRU5UKHN0YXRlLCBjb25zZW50KSB7CiAgICAgIHN0YXRlLmxvZ2dpbmdfY29uc2VudF9naXZlbiA9IGNvbnNlbnQ7CiAgICB9LAogICAgU0VUX1VVSUQ6IGZ1bmN0aW9uIFNFVF9VVUlEKHN0YXRlLCB1dWlkKSB7CiAgICAgIHN0YXRlLnV1aWQgPSB1dWlkOwogICAgfSwKICAgIC8vIFNFVF9IQVJEV0FSRShzdGF0ZSwgaGFyZHdhcmUpewogICAgLy8gICAgIHN0YXRlLmhhcmR3YXJlID0gaGFyZHdhcmU7CiAgICAvLyB9LAogICAgU0VUX1RPVEFMX1RJTUU6IGZ1bmN0aW9uIFNFVF9UT1RBTF9USU1FKHN0YXRlLCB0b3RhbCkgewogICAgICBzdGF0ZS5zZXNzaW9uX3RpbWUudG90YWwgPSB0b3RhbDsKICAgIH0sCiAgICBMT0c6IGZ1bmN0aW9uIExPRyhzdGF0ZSwgcGF5bG9hZCkgewogICAgICAvL29ubHkgbG9nIHRvIHNlcnZlciBpZiB1c2VyIGhhcyBnaXZlbiBjb25zZW50LgogICAgICAvL1N0aWxsIG1heSByZXF1aXJlIGxvZ2dpbmcgaW50ZXJuYWxseSBmb3IgYWNoaWV2ZW1lbnRzIGV0Yy4KICAgICAgaWYgKHN0YXRlLmxvZ2dpbmdfY29uc2VudF9naXZlbiAmJiBzdGF0ZS5sb2dTb2NrZXQgIT0gbnVsbCkgewogICAgICAgIHN0YXRlLmxvZ1NvY2tldC5zZW5kKEpTT04uc3RyaW5naWZ5KHsKICAgICAgICAgIHVzZXI6IHN0YXRlLnV1aWQsCiAgICAgICAgICB0OiBEYXRlLm5vdygpLAogICAgICAgICAgLy9leHA6IHN0YXRlLmhhcmR3YXJlLCAgICAgICAgCiAgICAgICAgICBwYXlsb2FkOiBwYXlsb2FkCiAgICAgICAgfSkpOwogICAgICB9CiAgICB9LAogICAgTE9HX1NVUlZFWTogZnVuY3Rpb24gTE9HX1NVUlZFWShzdGF0ZSwgcGF5bG9hZCkgewogICAgICAvL2NhbiBvbmx5IGJlIGNhbGxlZCBpZiBzdXJ2ZXlfY29uc2VudCBoYXMgYWxyZWFkeSBiZWVuIGdpdmVuCiAgICAgIGlmIChzdGF0ZS5sb2dTb2NrZXQgIT0gbnVsbCkgewogICAgICAgIHN0YXRlLmxvZ1NvY2tldC5zZW5kKEpTT04uc3RyaW5naWZ5KHsKICAgICAgICAgIHVzZXI6IHN0YXRlLnV1aWQsCiAgICAgICAgICB0OiBEYXRlLm5vdygpLAogICAgICAgICAgLy9leHA6IHN0YXRlLmhhcmR3YXJlLCAgICAgICAgCiAgICAgICAgICBwYXlsb2FkOiBwYXlsb2FkCiAgICAgICAgfSkpOwogICAgICB9CiAgICB9LAogICAgLy8gTE9HX0NMSUNLKHN0YXRlLCBkYXRhKXsKICAgIC8vICAgICBzdGF0ZS5jbGlja3MucHVzaChkYXRhKTsKICAgIC8vIH0sCiAgICBMT0dfU1RBUlQ6IGZ1bmN0aW9uIExPR19TVEFSVChzdGF0ZSwgdGltZSkgewogICAgICBzdGF0ZS5zZXNzaW9uX3RpbWUuc3RhcnQgPSB0aW1lOwogICAgfSwKICAgIExPR19FTkQ6IGZ1bmN0aW9uIExPR19FTkQoc3RhdGUsIHRpbWUpIHsKICAgICAgc3RhdGUuc2Vzc2lvbl90aW1lLmVuZCA9IHRpbWU7CiAgICB9LAogICAgVVBEQVRFX1NFU1NJT05fVElNRTogZnVuY3Rpb24gVVBEQVRFX1NFU1NJT05fVElNRShzdGF0ZSwgbm93KSB7CiAgICAgIHZhciBjdXJyZW50X3RvdGFsID0gc3RhdGUuc2Vzc2lvbl90aW1lLnRvdGFsOwogICAgICB2YXIgZGVsdGEgPSBub3cgLSBzdGF0ZS5zZXNzaW9uX3RpbWUucHJldmlvdXM7CiAgICAgIHN0YXRlLnNlc3Npb25fdGltZS50b3RhbCA9IGN1cnJlbnRfdG90YWwgKyBkZWx0YTsKICAgICAgc3RhdGUuc2Vzc2lvbl90aW1lLnByZXZpb3VzID0gbm93OwogICAgfSwKICAgIC8vIExPR19DT01QT05FTlQoc3RhdGUsIGNvbXBvbmVudCl7CiAgICAvLyAgICAgc3RhdGUuY29tcG9uZW50c19vcGVuZWQucHVzaChjb21wb25lbnQpOwogICAgLy8gfSwKICAgIC8vIExPR19QQVJBTUVURVJTKHN0YXRlLCBwYXJhbWV0ZXJzKXsKICAgIC8vICAgICBzdGF0ZS5wYXJhbWV0ZXJzLnB1c2gocGFyYW1ldGVycyk7CiAgICAvLyB9LAogICAgQ0xFQVJfTE9HR0VEX1RJTUU6IGZ1bmN0aW9uIENMRUFSX0xPR0dFRF9USU1FKHN0YXRlKSB7CiAgICAgIHN0YXRlLnNlc3Npb25fdGltZS5zdGFydCA9IERhdGUubm93KCk7CiAgICAgIHN0YXRlLnNlc3Npb25fdGltZS5lbmQgPSAwOwogICAgICBzdGF0ZS5zZXNzaW9uX3RpbWUudG90YWwgPSAwOwogICAgfQogIH0sCiAgYWN0aW9uczogewogICAgc2V0TG9nU29ja2V0OiBmdW5jdGlvbiBzZXRMb2dTb2NrZXQoY29udGV4dCwgc29ja2V0KSB7CiAgICAgIGNvbnRleHQuY29tbWl0KCdTRVRfTE9HX1NPQ0tFVCcsIHNvY2tldCk7CiAgICB9LAogICAgc2V0TG9nZ2luZ0NvbnNlbnQ6IGZ1bmN0aW9uIHNldExvZ2dpbmdDb25zZW50KGNvbnRleHQsIGNvbnNlbnQpIHsKICAgICAgY29udGV4dC5jb21taXQoJ1NFVF9MT0dHSU5HX0NPTlNFTlQnLCBjb25zZW50KTsKICAgIH0sCiAgICBzZXRVVUlEOiBmdW5jdGlvbiBzZXRVVUlEKGNvbnRleHQsIHV1aWQpIHsKICAgICAgY29udGV4dC5jb21taXQoJ1NFVF9VVUlEJywgdXVpZCk7CiAgICB9LAogICAgLy8gc2V0SGFyZHdhcmUoY29udGV4dCwgdXJsKXsKICAgIC8vICAgICBsZXQgaW5kZXggPSB1cmwuaW5kZXhPZignc3BpbicpOwogICAgLy8gICAgIGxldCBoYXJkd2FyZSA9IHVybC5zdWJzdHIoaW5kZXgsIDYpOwogICAgLy8gICAgIGNvbnRleHQuY29tbWl0KCdTRVRfSEFSRFdBUkUnLCBoYXJkd2FyZSkKICAgIC8vIH0sCiAgICBzZXRUb3RhbFRpbWU6IGZ1bmN0aW9uIHNldFRvdGFsVGltZShjb250ZXh0LCB0b3RhbCkgewogICAgICBjb250ZXh0LmNvbW1pdCgnU0VUX1RPVEFMX1RJTUUnLCB0b3RhbCk7CiAgICB9LAogICAgbG9nQ2xpY2s6IGZ1bmN0aW9uIGxvZ0NsaWNrKGNvbnRleHQsIHBheWxvYWQpIHsKICAgICAgLy9jb250ZXh0LmNvbW1pdCgnTE9HX0NMSUNLJywgcGF5bG9hZC5kYXRhKTsKICAgICAgY29udGV4dC5jb21taXQoJ0xPRycsIHBheWxvYWQpOyAvL3Nlc3Npb24gdGltZSBzaG91bGQgb25seSBpbmNyZWFzZSBpZiBzdGlsbCBjb25uZWN0ZWQgdG8gdGhlIGhhcmR3YXJlCgogICAgICBpZiAoIWNvbnRleHQuZ2V0dGVycy5nZXRTZXNzaW9uRXhwaXJlZCkgewogICAgICAgIGNvbnRleHQuY29tbWl0KCdVUERBVEVfU0VTU0lPTl9USU1FJywgRGF0ZS5ub3coKSk7CiAgICAgIH0KICAgIH0sCiAgICBsb2dTdGFydDogZnVuY3Rpb24gbG9nU3RhcnQoY29udGV4dCwgcGF5bG9hZCkgewogICAgICBjb250ZXh0LmNvbW1pdCgnTE9HX1NUQVJUJywgcGF5bG9hZC5kYXRhKTsKICAgICAgY29udGV4dC5jb21taXQoJ0xPRycsIHBheWxvYWQpOwogICAgfSwKICAgIGxvZ0VuZDogZnVuY3Rpb24gbG9nRW5kKGNvbnRleHQsIHBheWxvYWQpIHsKICAgICAgY29udGV4dC5jb21taXQoJ0xPR19FTkQnLCBwYXlsb2FkLmRhdGEpOwogICAgICBjb250ZXh0LmNvbW1pdCgnVVBEQVRFX1NFU1NJT05fVElNRScsIHBheWxvYWQuZGF0YSk7CiAgICAgIGNvbnRleHQuY29tbWl0KCdMT0cnLCBwYXlsb2FkKTsKICAgIH0sCiAgICBsb2dDb21wb25lbnQ6IGZ1bmN0aW9uIGxvZ0NvbXBvbmVudChjb250ZXh0LCBwYXlsb2FkKSB7CiAgICAgIC8vY29udGV4dC5jb21taXQoJ0xPR19DT01QT05FTlQnLCBwYXlsb2FkLmRhdGEpOwogICAgICBjb250ZXh0LmNvbW1pdCgnTE9HJywgcGF5bG9hZCk7CiAgICB9LAogICAgbG9nUGFyYW1ldGVyczogZnVuY3Rpb24gbG9nUGFyYW1ldGVycyhjb250ZXh0LCBwYXlsb2FkKSB7CiAgICAgIC8vY29udGV4dC5jb21taXQoJ0xPR19QQVJBTUVURVJTJywgcGF5bG9hZC5kYXRhKTsKICAgICAgY29udGV4dC5jb21taXQoJ0xPRycsIHBheWxvYWQpOwogICAgfSwKICAgIGxvZ0FjaGlldmVtZW50czogZnVuY3Rpb24gbG9nQWNoaWV2ZW1lbnRzKGNvbnRleHQsIGFjaGlldmVtZW50cykgewogICAgICBjb250ZXh0LmNvbW1pdCgnTE9HJywgewogICAgICAgIGxvZzogJ2FjaGlldmVtZW50cycsCiAgICAgICAgZGF0YTogYWNoaWV2ZW1lbnRzCiAgICAgIH0pOwogICAgfSwKICAgIGxvZ1Byb21wdHM6IGZ1bmN0aW9uIGxvZ1Byb21wdHMoY29udGV4dCwgcHJvbXB0cykgewogICAgICBjb250ZXh0LmNvbW1pdCgnTE9HX1NVUlZFWScsIHsKICAgICAgICBsb2c6ICdzdXJ2ZXknLAogICAgICAgIGRhdGE6IHByb21wdHMKICAgICAgfSk7CiAgICB9LAogICAgY2xlYXJMb2dnZWRUaW1lOiBmdW5jdGlvbiBjbGVhckxvZ2dlZFRpbWUoY29udGV4dCkgewogICAgICBjb250ZXh0LmNvbW1pdCgnQ0xFQVJfTE9HR0VEX1RJTUUnKTsKICAgIH0KICB9LAogIGdldHRlcnM6IHsKICAgIGdldExvZ1NvY2tldDogZnVuY3Rpb24gZ2V0TG9nU29ja2V0KHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5sb2dTb2NrZXQ7CiAgICB9LAogICAgZ2V0TG9nQ29uc2VudDogZnVuY3Rpb24gZ2V0TG9nQ29uc2VudChzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUubG9nZ2luZ19jb25zZW50X2dpdmVuOwogICAgfSwKICAgIGdldExvZ1VVSUQ6IGZ1bmN0aW9uIGdldExvZ1VVSUQoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLnV1aWQ7CiAgICB9LAogICAgLy8gZ2V0TG9nSGFyZHdhcmUoc3RhdGUpewogICAgLy8gICAgIHJldHVybiBzdGF0ZS5oYXJkd2FyZTsKICAgIC8vIH0sCiAgICBnZXRMb2dUb3RhbFRpbWU6IGZ1bmN0aW9uIGdldExvZ1RvdGFsVGltZShzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuc2Vzc2lvbl90aW1lLnRvdGFsOwogICAgfSwKICAgIC8vIGdldExvZ0NsaWNrcyhzdGF0ZSl7CiAgICAvLyAgICAgcmV0dXJuIHN0YXRlLmNsaWNrczsKICAgIC8vIH0sCiAgICBnZXRMb2dTdGFydDogZnVuY3Rpb24gZ2V0TG9nU3RhcnQoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLnNlc3Npb25fdGltZS5zdGFydDsKICAgIH0sCiAgICBnZXRMb2dFbmQ6IGZ1bmN0aW9uIGdldExvZ0VuZChzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuc2Vzc2lvbl90aW1lLmVuZDsKICAgIH0gLy8gZ2V0TG9nQ29tcG9uZW50cyhzdGF0ZSl7CiAgICAvLyAgICAgcmV0dXJuIHN0YXRlLmNvbXBvbmVudHNfb3BlbmVkOwogICAgLy8gfSwKICAgIC8vIGdldExvZ1BhcmFtZXRlcnMoc3RhdGUpewogICAgLy8gICAgIHJldHVybiBzdGF0ZS5wYXJhbWV0ZXJzOwogICAgLy8gfQoKICB9Cn07CmV4cG9ydCBkZWZhdWx0IGxvZ2dpbmdTdG9yZTs="},{"version":3,"sources":["/home/david/practable/spinner-amax/ui/src/modules/logging.js"],"names":["loggingStore","state","logSocket","uuid","logging_consent_given","session_time","start","Date","now","end","previous","total","parameters","mutations","SET_LOG_SOCKET","socket","SET_LOGGING_CONSENT","consent","SET_UUID","SET_TOTAL_TIME","LOG","payload","send","JSON","stringify","user","t","LOG_SURVEY","LOG_START","time","LOG_END","UPDATE_SESSION_TIME","current_total","delta","CLEAR_LOGGED_TIME","actions","setLogSocket","context","commit","setLoggingConsent","setUUID","setTotalTime","logClick","getters","getSessionExpired","logStart","data","logEnd","logComponent","logParameters","logAchievements","achievements","log","logPrompts","prompts","clearLoggedTime","getLogSocket","getLogConsent","getLogUUID","getLogTotalTime","getLogStart","getLogEnd"],"mappings":"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","sourcesContent":["//Store for the logging background data.\n\n/**Logging data:\n\n    clicks -> list of all clicks on UI, target div, screen position, div position, time\n    session_time -> start and end of session time as a Date object\n\n**/\n\nconst loggingStore = {\n    state: () => ({\n        logSocket: null,\n        uuid: '',\n        logging_consent_given: false,\n        //hardware: '',\n\n        //clicks: [],             //do I need to internally store this?\n        session_time: {\n            start: Date.now(),      //will be updated\n            end: Date.now(),\n            previous: Date.now(),\n            total: 0\n        },\n        //components_opened: [],      //{name: 'graph'} //do I need to internally store this?\n        parameters: [], //do I need to internally store this?\n\n       }),\n       mutations:{\n            SET_LOG_SOCKET(state, socket){\n                state.logSocket = socket;\n            },\n            SET_LOGGING_CONSENT(state, consent){\n                state.logging_consent_given = consent;\n            },\n            SET_UUID(state, uuid){\n                state.uuid = uuid;\n            },\n            // SET_HARDWARE(state, hardware){\n            //     state.hardware = hardware;\n            // },\n            SET_TOTAL_TIME(state, total){\n                state.session_time.total = total;\n            },\n            LOG(state, payload){\n                //only log to server if user has given consent.\n                //Still may require logging internally for achievements etc.\n                if(state.logging_consent_given && state.logSocket != null){\n                    state.logSocket.send(JSON.stringify({\n                        user: state.uuid,\n                        t: Date.now(),          \n                        //exp: state.hardware,        \n                        payload: payload\n                    }));\n                }\n                \n            },\n            LOG_SURVEY(state, payload){\n                //can only be called if survey_consent has already been given\n                if(state.logSocket != null){\n                    state.logSocket.send(JSON.stringify({\n                        user: state.uuid,\n                        t: Date.now(),          \n                        //exp: state.hardware,        \n                        payload: payload\n                    }));\n                }\n            },\n            // LOG_CLICK(state, data){\n            //     state.clicks.push(data);\n            // },\n            LOG_START(state, time){\n                state.session_time.start = time;\n            },\n            LOG_END(state, time){\n                state.session_time.end = time;\n            },\n            UPDATE_SESSION_TIME(state, now){\n                let current_total = state.session_time.total;\n                let delta = now - state.session_time.previous;\n                state.session_time.total = current_total + delta;\n\n                state.session_time.previous = now;\n            },\n            // LOG_COMPONENT(state, component){\n            //     state.components_opened.push(component);\n            // },\n            // LOG_PARAMETERS(state, parameters){\n            //     state.parameters.push(parameters);\n            // },\n            CLEAR_LOGGED_TIME(state){\n                state.session_time.start = Date.now();\n                state.session_time.end = 0;\n                state.session_time.total = 0;\n            }\n         \n\n       },\n       actions:{\n            setLogSocket(context, socket){\n                context.commit('SET_LOG_SOCKET', socket);\n            },\n            setLoggingConsent(context, consent){\n                context.commit('SET_LOGGING_CONSENT', consent);\n            },\n            setUUID(context, uuid){\n                context.commit('SET_UUID', uuid);\n            },\n            // setHardware(context, url){\n            //     let index = url.indexOf('spin');\n            //     let hardware = url.substr(index, 6);\n            //     context.commit('SET_HARDWARE', hardware)\n            // },\n            setTotalTime(context, total){\n                context.commit('SET_TOTAL_TIME', total);\n            },\n            logClick(context, payload){\n                //context.commit('LOG_CLICK', payload.data);\n                context.commit('LOG', payload);\n\n                //session time should only increase if still connected to the hardware\n                if(!context.getters.getSessionExpired){\n                    context.commit('UPDATE_SESSION_TIME', Date.now());\n                }\n                \n            },\n            logStart(context, payload){\n                context.commit('LOG_START', payload.data);\n                context.commit('LOG', payload);\n            },\n            logEnd(context, payload){\n                context.commit('LOG_END', payload.data);\n                context.commit('UPDATE_SESSION_TIME', payload.data);\n                context.commit('LOG', payload);\n            },\n            logComponent(context, payload){\n                //context.commit('LOG_COMPONENT', payload.data);\n                context.commit('LOG', payload);\n            },\n            logParameters(context, payload){\n                //context.commit('LOG_PARAMETERS', payload.data);\n                context.commit('LOG', payload);\n            },\n            logAchievements(context, achievements){\n                context.commit('LOG', {log:'achievements', data: achievements});\n            },\n            logPrompts(context, prompts){\n                context.commit('LOG_SURVEY', {log:'survey', data: prompts});\n            },\n            clearLoggedTime(context){\n                context.commit('CLEAR_LOGGED_TIME');\n            }\n\n\n       },\n       getters:{\n           getLogSocket(state){\n                return state.logSocket;\n           },\n           getLogConsent(state){\n            return state.logging_consent_given;\n            },\n            getLogUUID(state){\n                return state.uuid;\n            },\n            // getLogHardware(state){\n            //     return state.hardware;\n            // },\n            getLogTotalTime(state){\n                return state.session_time.total;\n            },\n            // getLogClicks(state){\n            //     return state.clicks;\n            // },\n            getLogStart(state){\n                return state.session_time.start;\n            },\n            getLogEnd(state){\n                return state.session_time.end;\n            },\n            // getLogComponents(state){\n            //     return state.components_opened;\n            // },\n            // getLogParameters(state){\n            //     return state.parameters;\n            // }\n          \n         \n       },  \n  \n  }\n\n  export default loggingStore;\n"]}]}