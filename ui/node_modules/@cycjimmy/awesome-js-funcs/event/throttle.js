"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

/**
 * throttling function
 * @param func: real function
 * @param wait: Wait time for next function call
 * @param mustRun: must be executed once in mustRun milliseconds
 */
var _default = function _default(func) {
  var wait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 200;
  var mustRun = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 400;
  var timeout;
  var startTime = new Date();
  return function () {
    var curTime = new Date();
    clearTimeout(timeout);

    if (curTime - startTime >= mustRun) {
      // If the specified trigger interval is reached, the handler is triggered
      func.apply(this, arguments);
      startTime = curTime;
    } else {
      // Trigger interval not reached, reset timer
      timeout = setTimeout(func, wait);
    }
  };
};

exports["default"] = _default;