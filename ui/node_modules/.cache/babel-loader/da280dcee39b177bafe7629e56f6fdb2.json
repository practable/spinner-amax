{"remainingRequest":"/home/david/spinner-amax/ui/node_modules/babel-loader/lib/index.js!/home/david/spinner-amax/ui/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/david/spinner-amax/ui/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/david/spinner-amax/ui/src/components/StepCommand.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/david/spinner-amax/ui/src/components/StepCommand.vue","mtime":1653472124341},{"path":"/home/david/spinner-amax/ui/babel.config.js","mtime":1653472124337},{"path":"/home/david/spinner-amax/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/spinner-amax/ui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/david/spinner-amax/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/spinner-amax/ui/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL2hvbWUvZGF2aWQvc3Bpbm5lci1hbWF4L3VpL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0IHsgbWFwQWN0aW9ucyB9IGZyb20gJ3Z1ZXgnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1N0ZXBDb21tYW5kJywKICBwcm9wczogewogICAgbW9kZTogU3RyaW5nCiAgfSwKICBlbWl0czogWydzaG93aW5wdXR0eXBlJ10sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHN0ZXBfc2l6ZTogMC4wMCwKICAgICAgbWF4X3Bvc2l0aW9uX3N0ZXA6IDYsCiAgICAgIG1heF9zcGVlZF9zdGVwOiAxMDAsCiAgICAgIG1heF92b2x0YWdlX3N0ZXA6IDEwLAogICAgICBpc1N0ZXBSdW5uaW5nOiBmYWxzZQogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgdmVyc2lvbiA9IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0UmVtb3RlTGFiVmVyc2lvbjsKCiAgICBpZiAodmVyc2lvbiA9PSAndmFyaWFibGVfZ292ZXJub3InKSB7CiAgICAgIHRoaXMubWF4X3Bvc2l0aW9uX3N0ZXAgPSBNYXRoLlBJOyAvL3ZhcmlhYmxlIGdvdmVybm9yIGNhbiBzcGluIGZ1bGwgY2lyY2xlCiAgICB9IGVsc2UgaWYgKHZlcnNpb24gPT0gJ3JvYm90X2FybScpIHsKICAgICAgdGhpcy5tYXhfcG9zaXRpb25fc3RlcCA9IDMgKiBNYXRoLlBJIC8gMTA7IC8vcm9ib3QgYXJtIGlzIHNvZnQgbGltaXRlZCB0byAzMDAgZW5jb2RlciBzdGVwcyBmcm9tIDAuCiAgICB9CiAgfSwKICBtZXRob2RzOiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIG1hcEFjdGlvbnMoWydzZXREcmFnZ2FibGUnXSkpLCB7fSwgewogICAgcnVuU3RlcDogZnVuY3Rpb24gcnVuU3RlcCgpIHsKICAgICAgaWYgKHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0SXNEYXRhUmVjb3JkZXJPbikgewogICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdzZXRJc1JlY29yZGluZycsIHRydWUpOwogICAgICB9CgogICAgICB0aGlzLiRlbWl0KCdzaG93aW5wdXR0eXBlJywgZmFsc2UpOyAvLyAgbGV0IHN0ZXAgPSB7CiAgICAgIC8vICAgICAgc3RlcF90aW1lOiB0aGlzLnRpbWVfdG9fc3RlcCwKICAgICAgLy8gICAgICBzdGVwX3N0YXJ0OiAwLAogICAgICAvLyAgICAgIHN0ZXBfc2l6ZTogdGhpcy5zdGVwX3NpemUKICAgICAgLy8gIH0KICAgICAgLy8gIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdzZXRTdGVwJywgc3RlcCk7CgogICAgICB0aGlzLnNlbmRDb21tYW5kKCk7CiAgICB9LAogICAgc2VuZENvbW1hbmQ6IGZ1bmN0aW9uIHNlbmRDb21tYW5kKCkgewogICAgICBpZiAodGhpcy5tb2RlID09ICdzcGVlZFJhdycpIHsKICAgICAgICB0aGlzLmlzU3RlcFJ1bm5pbmcgPSB0cnVlOwogICAgICAgIHZhciBzaWduYWwgPSBwYXJzZUZsb2F0KHRoaXMuc3RlcF9zaXplKTsKICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnc2V0Vm9sdGFnZScsIHNpZ25hbCk7CiAgICAgIH0gZWxzZSBpZiAodGhpcy5tb2RlID09ICdwb3NpdGlvblBpZCcpIHsKICAgICAgICB0aGlzLmlzU3RlcFJ1bm5pbmcgPSB0cnVlOyAvL05FVyAhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEKCiAgICAgICAgdmFyIG5ld19hbmdfcmFkID0gdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXRDdXJyZW50QW5nbGUgKyBwYXJzZUZsb2F0KHRoaXMuc3RlcF9zaXplKTsKICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnc2V0UG9zaXRpb24nLCBuZXdfYW5nX3JhZCk7CiAgICAgIH0gZWxzZSBpZiAodGhpcy5tb2RlID09ICdzcGVlZFBpZCcpIHsKICAgICAgICB0aGlzLmlzU3RlcFJ1bm5pbmcgPSB0cnVlOwogICAgICAgIHZhciByYWRfcyA9IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0Q3VycmVudEFuZ3VsYXJWZWxvY2l0eSArIHBhcnNlRmxvYXQodGhpcy5zdGVwX3NpemUpOyAvL25lZWRzIHRvIGJlIGluIHJhZC9zCgogICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdzZXRTcGVlZCcsIHJhZF9zKTsKICAgICAgfQoKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2FkZE11bHRpcGxlQWNoaWV2ZW1lbnQnLCAnbXVsdGlwbGUtcnVucycpOwogICAgfSwKICAgIHN0b3BTdGVwOiBmdW5jdGlvbiBzdG9wU3RlcCgpIHsKICAgICAgLy90aGlzIGlzIGFuIGludGVybmFsIG1vZGUgaW4gdGhlIGZpcm13YXJlIGFuZCBkb2VzIG5vdCBuZWVkIHRvIGJlIHJlZmxlY3RlZCBpbiB0aGUgVUkuCiAgICAgIHRoaXMuaXNTdGVwUnVubmluZyA9IGZhbHNlOyAvL05FVyAhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhIQoKICAgICAgdGhpcy4kZW1pdCgnc2hvd2lucHV0dHlwZScsIHRydWUpOwoKICAgICAgaWYgKHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0SXNSZWNvcmRpbmcpIHsKICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnc2V0SXNSZWNvcmRpbmcnLCBmYWxzZSk7CiAgICAgIH0KCiAgICAgIGlmICh0aGlzLm1vZGUgPT0gJ3Bvc2l0aW9uUGlkJykgewogICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCd3YWl0Jyk7CiAgICAgIH0gZWxzZSBpZiAodGhpcy5tb2RlID09ICdzcGVlZFJhdycpIHsKICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnc2V0Vm9sdGFnZScsIDApOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCd3YWl0Jyk7CiAgICAgIH0KICAgIH0KICB9KQp9Ow=="},{"version":3,"sources":["/home/david/spinner-amax/ui/src/components/StepCommand.vue"],"names":[],"mappings":"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","sourcesContent":["//vue3 update\n\n<template>\n        \n        <div class=\"row d-flex justify-content-center m-4\" @mousedown=\"setDraggable(false)\" @mouseup=\"setDraggable(true)\">  \n            <div class='col-auto'>\n                <div class='input-group' v-if='mode == \"speedRaw\"'>\n                    <span class='input-group-text' for=\"step_raw\">Step size ({{-max_voltage_step}} to {{max_voltage_step}}V)</span>\n                    <input type=\"number\" :max='max_voltage_step' :min='-max_voltage_step' :class=\"(parseFloat(step_size) >= -max_voltage_step && parseFloat(step_size) <= max_voltage_step) ? 'form-control' : 'form-control is-invalid'\" id=\"step_raw\" v-model=\"step_size\">\n                    <button class='btn btn-lg' id=\"run\" @click=\"runStep(); this.$store.dispatch('setAchievementCompleted', 'speedRaw-step-input')\">Run</button>\n                    <button class='btn btn-lg btn-danger' v-if='isStepRunning' id=\"wait\" @click=\"stopStep\">Stop</button>\n                </div>\n            \n\n                <div class='input-group' v-else-if='mode == \"speedPid\"'>\n                    <span class='input-group-text' for=\"step_speed\">Step size (0 - {{max_speed_step}} rad/s)</span>\n                    <input type=\"number\" :max='max_speed_step' :min='-max_speed_step' :class=\"(parseFloat(step_size) >= -max_speed_step && parseFloat(step_size) <= max_speed_step) ? 'form-control' : 'form-control is-invalid'\" id=\"step_speed\" v-model=\"step_size\">\n                    <button class='btn btn-lg' id=\"run\" @click=\"runStep\">Run</button>\n                    <button class='btn btn-lg btn-danger' v-if='isStepRunning' id=\"wait\" @click=\"stopStep\">Stop</button>\n                </div>\n\n                <div class='input-group' v-else-if='mode == \"positionPid\"'>\n                    <span class='input-group-text' for=\"step_speed\">Step size (0 - {{max_position_step.toFixed(2)}} rad)</span>\n                    <input type=\"number\" step='0.01' :max='max_position_step.toFixed(2)' :min='-max_position_step.toFixed(2)' :class=\"(parseFloat(step_size) >= -max_position_step && parseFloat(step_size) <= max_position_step) ? 'form-control' : 'form-control is-invalid'\" id=\"step_position\" v-model=\"step_size\" >\n                    <button class='btn btn-lg' v-if='!isStepRunning' id=\"run\" @click=\"runStep(); this.$store.dispatch('checkPIDControllerConditions')\">Run</button>\n                    <button class='btn btn-lg btn-danger' v-else-if='isStepRunning' id=\"wait\" @click=\"stopStep\">Stop</button>\n                </div>\n\n            </div>\n        </div>\n       \n</template>\n\n<script>\nimport { mapActions } from 'vuex';\n\nexport default {\n\n  name: 'StepCommand',\n  props:{\n      mode: String,\n  },\n  emits:['showinputtype'],\n  data () {\n    return {\n        step_size: 0.00,            \n        max_position_step: 6, \n        max_speed_step: 100,\n        max_voltage_step: 10,\n        isStepRunning: false,\n    }\n  },\n  created(){\n      let version = this.$store.getters.getRemoteLabVersion;\n        if( version == 'variable_governor'){\n            this.max_position_step = Math.PI;             //variable governor can spin full circle\n        } else if(version == 'robot_arm'){\n            this.max_position_step = 3*Math.PI/10;          //robot arm is soft limited to 300 encoder steps from 0.\n        }\n\t},\n  methods: {\n      ...mapActions([\n          'setDraggable'\n      ]),\n     runStep(){\n         if(this.$store.getters.getIsDataRecorderOn){\n                 this.$store.dispatch('setIsRecording', true);\n             }\n\n         this.$emit('showinputtype', false);\n         \n        //  let step = {\n        //      step_time: this.time_to_step,\n        //      step_start: 0,\n        //      step_size: this.step_size\n        //  }\n        //  this.$store.dispatch('setStep', step);\n         \n        this.sendCommand();\n             \n     },\n     sendCommand(){\n         if(this.mode == 'speedRaw'){\n             \n             this.isStepRunning = true; \n             let signal = parseFloat(this.step_size);\n             this.$store.dispatch('setVoltage', signal);\n\n         } else if(this.mode == 'positionPid'){\n\n             this.isStepRunning = true;                      //NEW !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n             let new_ang_rad = this.$store.getters.getCurrentAngle + parseFloat(this.step_size);\n             this.$store.dispatch('setPosition', new_ang_rad);\n\n         } else if(this.mode == 'speedPid'){\n\n             this.isStepRunning = true; \n             let rad_s = this.$store.getters.getCurrentAngularVelocity + parseFloat(this.step_size);           //needs to be in rad/s\n             this.$store.dispatch('setSpeed', rad_s);\n\n         }\n\n         \n         this.$store.dispatch('addMultipleAchievement','multiple-runs');\n         \n     },\n     stopStep(){\n            //this is an internal mode in the firmware and does not need to be reflected in the UI.\n            this.isStepRunning = false;\t\t\t\t//NEW !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t\t\t\n            this.$emit('showinputtype', true);\n\n            if(this.$store.getters.getIsRecording){\n                 this.$store.dispatch('setIsRecording', false);\n             }\n\n            if(this.mode == 'positionPid'){\n                this.$store.dispatch('wait');\n            } else if(this.mode == 'speedRaw'){\n                this.$store.dispatch('setVoltage', 0);\n            } else {\n                this.$store.dispatch('wait');\n            }\n             \n\t\t},\n     \n  }\n}\n</script>\n\n<style scoped>\ninput{\n    min-width: 20%;\n    max-width: 50%;\n}\n.error{\n    /* border:thick solid red */\n    border: auto;\n}\n\n.error:focus{\n    /* border:thick solid red */\n    border: auto;\n}\n\n#run       {background-color:  rgb(74, 223, 37);}\n#run:hover {background-color: #0b7e0f} \n#wait       {background-color:  rgb(255, 30, 0);}\n#wait:hover {background-color: #520303} \n\n\n</style>"],"sourceRoot":""}]}