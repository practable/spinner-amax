{"remainingRequest":"/home/david/practable/spinner-amax/ui/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/david/practable/spinner-amax/ui/src/components/LoggingStream.vue?vue&type=template&id=912e5f82","dependencies":[{"path":"/home/david/practable/spinner-amax/ui/src/components/LoggingStream.vue","mtime":1653472124341},{"path":"/home/david/practable/spinner-amax/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/practable/spinner-amax/ui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/david/practable/spinner-amax/ui/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/home/david/practable/spinner-amax/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/practable/spinner-amax/ui/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgogICAgPGRpdj4KCQk8bG9nZ2luZyA6dXJsPSJnZXRMb2dVUkwiLz4KCTwvZGl2PgoK"},{"version":3,"sources":["/home/david/practable/spinner-amax/ui/src/components/LoggingStream.vue"],"names":[],"mappings":";;IAII,CAAC,CAAC,CAAC,CAAC;EACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;CAC3B,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/home/david/practable/spinner-amax/ui/src/components/LoggingStream.vue","sourceRoot":"","sourcesContent":["//vue3 update\n\n<template>\n\n    <div>\n\t\t<logging :url=\"getLogURL\"/>\n\t</div>\n\n</template>\n\n<script>\nimport axios from \"axios\";\nimport Logging from \"./Logging.vue\";\nimport { mapGetters } from 'vuex';\n\nexport default {\n\tname: \"LoggingStream\",\n\tcomponents:{\n        Logging,\n\t},\n    data(){\n        return{\n\t\t\tstream: Object,\n        }\n    },\n\tmounted(){\n\t\t//make second and subsequent connections\n\t\tdocument.addEventListener(\"streams:dropped\", this.getWebsocketConnection);\n\t},\n    computed:{\n\t\t...mapGetters([\n\t\t\t'getLogURLObtained',\n\t\t\t'getLogURL',\n        ]),\n\t\tstreamOK(){\n\t\t\treturn this.$store.getters.getStream(\"log\");\n\t\t},\n\t\t\n\t},\n\twatch:{\n\t\tstreamOK: function(is) {\n\t\t\tif (is) {\n\t\t\t\tthis.getWebsocketConnection();\n\t\t\t} else {\n\t\t\t\tconsole.log(\"no log stream\");\n\t\t\t}\n\t\t},\n\t\tgetLogURLObtained(is) {\n\t\t\tif (is) {\n\t\t\t\tconsole.log(\"get logURL\", this.getLogURLObtained, this.getLogURL);\n\t\t\t}\n\t\t},\n\n\t},\n\tmethods:{\n\t\tgetWebsocketConnection(){\n\t\t\tthis.stream = this.$store.getters.getStream(\"log\");\n\t\t\tvar accessURL = this.stream.url;\n\t\t\tvar token = this.stream.token;\n\t\t\tlet _this = this;\n\t\t\tthis.$store.dispatch(\"deleteLogURL\");\n\t\t\taxios\n\t\t\t.post(accessURL, {}, { headers: { Authorization: token } })\n\t\t\t.then((response) => {\n\t\t\t\t_this.$store.dispatch(\"setLogURL\", response.data.uri);\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\t\t}\n\t},\n\t\n\t\n}\n\n\n</script>\n\n<style scoped>\n\n</style>"]}]}