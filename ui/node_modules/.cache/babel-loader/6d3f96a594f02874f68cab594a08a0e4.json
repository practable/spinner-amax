{"remainingRequest":"/home/david/spinner-amax/ui/node_modules/babel-loader/lib/index.js!/home/david/spinner-amax/ui/node_modules/eslint-loader/index.js??ref--14-0!/home/david/spinner-amax/ui/src/modules/prompts.js","dependencies":[{"path":"/home/david/spinner-amax/ui/src/modules/prompts.js","mtime":1653472124341},{"path":"/home/david/spinner-amax/ui/babel.config.js","mtime":1653472124337},{"path":"/home/david/spinner-amax/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/spinner-amax/ui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/david/spinner-amax/ui/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/david/spinner-amax/ui/src/modules/prompts.js"],"names":["promptsStore","state","survey_consent_given","prompts","name","verbose","mainText","minScale","maxScale","hidden","response","completed","type","count","options","new_prompt_update","new_prompt_count","prompts_loaded","mutations","LOAD_PROMPTS","prompts_to_load","updated_prompts","forEach","prompt","update_prompt","find","pro","undefined","push","SET_PROMPT_RESPONSE","payload","item","SHOW_PROMPT","SET_PROMPT_UPDATE","set","SET_SURVEY_CONSENT","CLEAR_COMPLETED_PROMPTS","SET_PROMPTS_LOADED","actions","loadPrompts","context","commit","setPromptResponse","getters","getPromptsUncompleted","includes","dispatch","root","showPrompt","setPromptUpdate","setSurveyConsent","clearCompletedPrompts","setPromptsLoaded","getPrompts","getAvailablePrompts","a_p","getPromptCompleted","uncompleted","getPromptUpdated","getSurveyConsent","getPromptByName","getNewPromptCount","getPromptsLoaded"],"mappings":"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","sourcesContent":["//Store for the prompts specific to this remote lab.\n//Prompts must have unique names\n\nconst promptsStore = {\n    state: () => ({\n        survey_consent_given: false,\n        prompts: [\n            {name:'rate_experience', verbose:'Please rate your experience of the remote lab so far.', mainText:'Select the appropriate point for your overall impression of the remote lab so far.', minScale:'Hate it.', maxScale:'Love it.', hidden: true, response: '', completed: false, type: 'likert', count: 0}, \n            {name:'rate_ui', verbose:'Please rate your experience of the USER INTERFACE so far.', mainText:'Rate your agreement with the statement: it is easy to navigate the user interface', minScale:'Strongly disagree', maxScale:'Strongly agree', hidden: true, response: '', completed: false, type: 'likert', count: 0},\n            {name:'comment_improvements', verbose:'How could we improve the remote lab?', mainText:'Please provide comments on how we could improve the remote lab.', hidden: true, response: '', completed: false, type: 'text', count: 0}, \n            {name:'useful_component', verbose:'Which component has been the most useful?', mainText:'Name the component or components that you have found most useful.', hidden: true, response: '', completed: false, type: 'text', count: 0},\n            {name:'control_experiment', verbose:'How in control of your practical do you feel?', mainText:'Rate your agreement with the statement: the UI allows me to control how I perform the practical work.', minScale:'Strongly disagree', maxScale:'Strongly agree', hidden: true, response: '', completed: false, type: 'likert', count: 0},\n            {name:'control_hardware', verbose:'How in control of the hardware do you feel?', mainText:'Rate your agreement with the statement: I am in control of the physical hardware', minScale:'Strongly disagree', maxScale:'Strongly agree', hidden: true, response: '', completed: false, type: 'likert', count: 0},\n            {name:'rate-ach', verbose:'What do you think about the achievements?', mainText:'Rate your agreement with the statement: the achievements have helped encourage me to explore the remote lab', minScale:'Strongly disagree', maxScale:'Strongly agree', hidden: true, response: '', completed: false, type: 'likert', count: 0},\n            {name:'data_analysis', verbose:'Data analysis', mainText:'Which component is best for analysing data?', options:['Graph', 'Snapshot', 'Table', 'Download'], hidden: true, response: '', completed: false, type: 'select', count: 0}, \n            {name:'download_data', verbose:'Have you downloaded your data', mainText:'Remember to download your results for offline analysis', hidden: true, response: '', completed: false, type: 'prompt', count: 0},\n            {name:'rate_customise', verbose:'Customising the UI', mainText:'Rate your agreement with the statement: I am happy with the level of customisation possible on the UI ', minScale:'Strongly disagree', maxScale:'Strongly agree', hidden: true, response: '', completed: false, type: 'likert', count: 0},\n            {name:'graph_functions', verbose:'Graph functions', mainText:'Remember that there are plotting functions on the graph tool for analysing your data', hidden: true, response: '', completed: false, type: 'prompt', count: 0},\n            {name:'session_time_90', verbose:'Session time', mainText:'Your total session time is now longer than 90 minutes.', hidden: true, response: '', completed: false, type: 'prompt', count: 0},\n            {name:'session_time_180', verbose:'Session time', mainText:'Your total session time is now longer than 180 minutes', hidden: true, response: '', completed: false, type: 'prompt', count: 0},\n            {name:'ueq_dependability', verbose:'Dependability rating', mainText:'Please rate your experience on the following scales:', minScale:['unpredictable', 'obstructive', 'not secure', 'does not meet expectations'], maxScale:['predictable', 'supportive', 'secure', 'meets expectations'], hidden: true, response: [], completed: false, type: 'likert_multiple', count: 0},\n            {name:'ueq_attractiveness', verbose:'Attractiveness rating', mainText:'Please rate your experience on the following scales:', minScale:['annoying', 'bad', 'unlikeable', 'unpleasant', 'unattractive', 'unfriendly'], maxScale:['enjoyable', 'good', 'pleasing', 'pleasant', 'attractive', 'friendly'], hidden: true, response: [], completed: false, type: 'likert_multiple', count: 0},\n            {name:'ueq_efficiency', verbose:'Efficiency rating', mainText:'Please rate your experience on the following scales:', minScale:['slow', 'inefficient', 'impractical', 'cluttered'], maxScale:['fast', 'efficient', 'practical', 'organized'], hidden: true, response: [], completed: false, type: 'likert_multiple', count: 0},\n            {name:'ueq_perspicuity', verbose:'Ease of use rating', mainText:'Please rate your experience on the following scales:', minScale:['not understandable', 'difficult to learn', 'complicated', 'confusing'], maxScale:['understandable', 'easy to learn', 'easy', 'clear'], hidden: true, response: [], completed: false, type: 'likert_multiple', count: 0},\n            {name:'report_issues', verbose:'Have you had any problems with the remote lab?', mainText:'Please provide details about any issues you have experienced with the remote lab.', hidden: true, response: '', completed: false, type: 'text', count: 0}, \n        ],\n        new_prompt_update: false,\n        new_prompt_count: 0,\n        prompts_loaded: false,\n\n       }),\n       mutations:{\n        LOAD_PROMPTS(state, prompts_to_load){\n            let updated_prompts = [];\n            state.prompts.forEach(prompt => {\n                let update_prompt = prompts_to_load.find(pro => pro.name == prompt.name);\n                if(update_prompt != undefined){\n                    update_prompt.hidden = true;\n                    updated_prompts.push(update_prompt);\n                } else{\n                    updated_prompts.push(prompt);\n                }\n            })\n            state.prompts = updated_prompts;\n            state.prompts_loaded = true;\n        },\n         SET_PROMPT_RESPONSE(state, payload){\n            state.prompts.forEach(item => {\n                if(item.name == payload.name){\n                    item.response = payload.response;\n                    item.completed = true;\n                    item.count += 1;\n                }\n            });\n         },\n         SHOW_PROMPT(state, name){\n             \n            state.prompts.forEach(item => {\n                if(item.name == name){\n                    item.hidden = false;\n                }\n            });\n         },\n         SET_PROMPT_UPDATE(state, set){\n            if(set){\n              state.new_prompt_count += 1;\n            } else{\n                state.new_prompt_count = 0;\n            }\n            \n            state.new_prompt_update = set;\n         },\n         SET_SURVEY_CONSENT(state, set){\n             state.survey_consent_given = set;\n         },\n         CLEAR_COMPLETED_PROMPTS(state){\n            state.prompts.forEach(prompt => {\n                prompt.completed = false;\n                prompt.response = '';\n                prompt.count = 0;\n            })\n         },\n         SET_PROMPTS_LOADED(state){\n             state.prompts_loaded = true;\n         }\n         \n\n       },\n       actions:{\n        loadPrompts(context, prompts){\n            context.commit('LOAD_PROMPTS', prompts);\n        },\n        setPromptResponse(context, payload){\n             if(context.getters.getPromptsUncompleted.includes(payload.name)){\n                context.commit('SET_PROMPT_RESPONSE', payload);\n\n                context.dispatch('logPrompts', context.state.prompts, {root: true});\n             }\n         },\n         showPrompt(context, name){\n             if(context.state.survey_consent_given && context.getters.getPromptsUncompleted.includes(name)){\n                context.commit('SHOW_PROMPT', name);\n                context.commit('SET_PROMPT_UPDATE', true);\n             }\n            \n         },\n         setPromptUpdate(context, set){\n             context.commit('SET_PROMPT_UPDATE', set);\n         },\n         setSurveyConsent(context, set){\n             context.commit('SET_SURVEY_CONSENT', set);\n         },\n         clearCompletedPrompts(context){\n             context.commit('CLEAR_COMPLETED_PROMPTS');\n         },\n         setPromptsLoaded(context){\n             context.commit('SET_PROMPTS_LOADED');\n         }\n\n       },\n       getters:{\n         getPrompts(state){\n            return state.prompts;\n         },\n         getAvailablePrompts(state){\n             let a_p = [];\n            state.prompts.forEach(prompt => {\n                if(!prompt.hidden && !prompt.completed){\n                    a_p.push(prompt);\n                }\n            })\n\n            return a_p;\n         },\n         getPromptCompleted(state){\n             let completed = [];\n            state.prompts.forEach(item => {\n                if(item.completed){\n                    completed.push(item.name);\n                }\n            });\n            return completed;\n         },\n         getPromptsUncompleted(state){\n            let uncompleted = [];\n            state.prompts.forEach(item => {\n                if(!item.completed){\n                    uncompleted.push(item.name);\n                }\n            });\n            return uncompleted;\n         },\n         getPromptUpdated(state){\n             return state.new_prompt_update;\n         },\n         getSurveyConsent(state){\n             return state.survey_consent_given;\n         },\n         getPromptByName: (state) => (name) => {\n            return state.prompts.find(prompt => prompt.name == name);\n         },\n         getNewPromptCount(state){\n          return state.new_prompt_count;\n        },\n        getPromptsLoaded(state){\n            return state.prompts_loaded;\n        }\n          \n         \n       },  \n  \n  }\n\n  export default promptsStore;\n"]}]}