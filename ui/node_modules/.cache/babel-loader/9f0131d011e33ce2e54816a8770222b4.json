{"remainingRequest":"/home/david/practable/spinner-amax/ui/node_modules/babel-loader/lib/index.js!/home/david/practable/spinner-amax/ui/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/david/practable/spinner-amax/ui/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/david/practable/spinner-amax/ui/src/components/Prompts.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/david/practable/spinner-amax/ui/src/components/Prompts.vue","mtime":1653472124341},{"path":"/home/david/practable/spinner-amax/ui/babel.config.js","mtime":1653472124337},{"path":"/home/david/practable/spinner-amax/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/practable/spinner-amax/ui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/david/practable/spinner-amax/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/practable/spinner-amax/ui/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL2hvbWUvZGF2aWQvcHJhY3RhYmxlL3NwaW5uZXItYW1heC91aS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgeyBtYXBHZXR0ZXJzIH0gZnJvbSAndnVleCc7CmltcG9ydCB7IG1hcEFjdGlvbnMgfSBmcm9tICd2dWV4JzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdQcm9tcHRzJywKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdGVtcF9tdWx0aXBsZV9yZXNwb25zZTogW10KICAgIH07CiAgfSwKICBjb21wdXRlZDogX29iamVjdFNwcmVhZCh7fSwgbWFwR2V0dGVycyhbJ2dldEF2YWlsYWJsZVByb21wdHMnLCAnZ2V0UHJvbXB0VXBkYXRlZCcsICdnZXROZXdQcm9tcHRDb3VudCcsICdnZXRMb2dUb3RhbFRpbWUnLCAnZ2V0UHJvbXB0QnlOYW1lJywgJ2dldEFjaGlldmVtZW50QnlOYW1lJywgJ2dldFByb21wdHMnLCAnZ2V0UHJvbXB0c0xvYWRlZCcsICdnZXRTZXNzaW9uRXhwaXJlZCddKSksCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsvL3RoaXMudHJpZ2dlclByb21wdHMoKTsKICB9LAogIHdhdGNoOiB7CiAgICBnZXRQcm9tcHRzTG9hZGVkOiBmdW5jdGlvbiBnZXRQcm9tcHRzTG9hZGVkKGxvYWRlZCkgewogICAgICBpZiAobG9hZGVkKSB7CiAgICAgICAgdGhpcy50cmlnZ2VyUHJvbXB0cygpOwogICAgICB9CiAgICB9LAogICAgZ2V0U2Vzc2lvbkV4cGlyZWQ6IGZ1bmN0aW9uIGdldFNlc3Npb25FeHBpcmVkKGV4cGlyZWQpIHsKICAgICAgaWYgKGV4cGlyZWQpIHsKICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnc2V0UHJvbXB0c0F2YWlsYWJsZScsIGZhbHNlKTsKICAgICAgfQogICAgfQogIH0sCiAgbWV0aG9kczogX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBtYXBBY3Rpb25zKFsnc2V0UHJvbXB0VXBkYXRlJywgJ3NldFByb21wdFJlc3BvbnNlJywgJ3Nob3dQcm9tcHQnXSkpLCB7fSwgewogICAgdXBkYXRlUmVzcG9uc2U6IGZ1bmN0aW9uIHVwZGF0ZVJlc3BvbnNlKHByb21wdCwgaW5wdXRfaWQpIHsKICAgICAgdmFyIHBheWxvYWQgPSB7CiAgICAgICAgbmFtZTogcHJvbXB0Lm5hbWUsCiAgICAgICAgcmVzcG9uc2U6IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlucHV0X2lkKS52YWx1ZQogICAgICB9OwogICAgICB0aGlzLnNldFByb21wdFJlc3BvbnNlKHBheWxvYWQpOwogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnc2V0QWNoaWV2ZW1lbnRDb21wbGV0ZWQnLCAnc3VydmV5LXJlc3BvbnNlJyk7CiAgICB9LAogICAgdXBkYXRlTXVsdGlwbGVSZXNwb25zZTogZnVuY3Rpb24gdXBkYXRlTXVsdGlwbGVSZXNwb25zZShwcm9tcHQsIHJlc3BvbnNlKSB7CiAgICAgIHZhciBwYXlsb2FkID0gewogICAgICAgIG5hbWU6IHByb21wdC5uYW1lLAogICAgICAgIHJlc3BvbnNlOiByZXNwb25zZQogICAgICB9OwogICAgICB0aGlzLnNldFByb21wdFJlc3BvbnNlKHBheWxvYWQpOwogICAgICB0aGlzLnRlbXBfbXVsdGlwbGVfcmVzcG9uc2UgPSBbXTsKICAgIH0sCiAgICB0cmlnZ2VyUHJvbXB0czogZnVuY3Rpb24gdHJpZ2dlclByb21wdHMoKSB7CiAgICAgIHZhciB0b3RhbF9zZXNzaW9uX3RpbWUgPSB0aGlzLmdldExvZ1RvdGFsVGltZTsKICAgICAgdmFyIHByb21wdF9yYXRlID0gdGhpcy5nZXRQcm9tcHRCeU5hbWUoJ3JhdGVfZXhwZXJpZW5jZScpOwogICAgICB2YXIgcHJvbXB0X3VpID0gdGhpcy5nZXRQcm9tcHRCeU5hbWUoJ3JhdGVfdWknKTsKICAgICAgdmFyIHByb21wdF9pbXByb3ZlbWVudHMgPSB0aGlzLmdldFByb21wdEJ5TmFtZSgnY29tbWVudF9pbXByb3ZlbWVudHMnKTsKICAgICAgdmFyIHByb21wdF9kYXRhID0gdGhpcy5nZXRQcm9tcHRCeU5hbWUoJ2RhdGFfYW5hbHlzaXMnKTsKICAgICAgdmFyIHByb21wdF9hY2hpZXZlbWVudHMgPSB0aGlzLmdldFByb21wdEJ5TmFtZSgncmF0ZS1hY2gnKTsKICAgICAgdmFyIHByb21wdF85MCA9IHRoaXMuZ2V0UHJvbXB0QnlOYW1lKCdzZXNzaW9uX3RpbWVfOTAnKTsKCiAgICAgIGlmIChwcm9tcHRfcmF0ZS5jb3VudCA9PSAwICYmIHRvdGFsX3Nlc3Npb25fdGltZSA+IDE4MDAwMDAgfHwgcHJvbXB0X3JhdGUuY291bnQgPT0gMSAmJiB0b3RhbF9zZXNzaW9uX3RpbWUgPiAzNjAwMDAwIHx8IHByb21wdF9yYXRlLmNvdW50ID09IDIgJiYgdG90YWxfc2Vzc2lvbl90aW1lID4gNTQwMDAwMCkgewogICAgICAgIHRoaXMuc2hvd1Byb21wdCgncmF0ZV9leHBlcmllbmNlJyk7CiAgICAgIH0KCiAgICAgIGlmICh0aGlzLmdldEFjaGlldmVtZW50QnlOYW1lKCdzcGVlZFJhdy1zdGVwLWlucHV0JykuY29tcGxldGVkICYmIChwcm9tcHRfdWkuY291bnQgPT0gMCAmJiB0b3RhbF9zZXNzaW9uX3RpbWUgPiA2MDAwMDAgfHwgcHJvbXB0X3VpLmNvdW50ID09IDEgJiYgdG90YWxfc2Vzc2lvbl90aW1lID4gMTgwMDAwMCkpIHsKICAgICAgICB0aGlzLnNob3dQcm9tcHQoJ3JhdGVfdWknKTsKICAgICAgfQoKICAgICAgaWYgKHByb21wdF9pbXByb3ZlbWVudHMuY291bnQgPT0gMCAmJiB0b3RhbF9zZXNzaW9uX3RpbWUgPiAxODAwMDAwIHx8IHByb21wdF9pbXByb3ZlbWVudHMuY291bnQgPT0gMSAmJiB0b3RhbF9zZXNzaW9uX3RpbWUgPiAzNjAwMDAwIHx8IHByb21wdF9pbXByb3ZlbWVudHMuY291bnQgPT0gMiAmJiB0b3RhbF9zZXNzaW9uX3RpbWUgPiA1NDAwMDAwKSB7CiAgICAgICAgdGhpcy5zaG93UHJvbXB0KCdjb21tZW50X2ltcHJvdmVtZW50cycpOwogICAgICB9CgogICAgICBpZiAocHJvbXB0X2FjaGlldmVtZW50cy5jb3VudCA9PSAwICYmIHRvdGFsX3Nlc3Npb25fdGltZSA+IDE4MDAwMDAgfHwgcHJvbXB0X2FjaGlldmVtZW50cy5jb3VudCA9PSAxICYmIHRvdGFsX3Nlc3Npb25fdGltZSA+IDM2MDAwMDAgfHwgcHJvbXB0X2FjaGlldmVtZW50cy5jb3VudCA9PSAyICYmIHRvdGFsX3Nlc3Npb25fdGltZSA+IDU0MDAwMDApIHsKICAgICAgICB0aGlzLnNob3dQcm9tcHQoJ3JhdGUtYWNoJyk7CiAgICAgIH0KCiAgICAgIGlmICh0aGlzLmdldEFjaGlldmVtZW50QnlOYW1lKCdzcGVlZFJhdy1zdGVwLWlucHV0JykuY29tcGxldGVkID09IHRydWUgJiYgdGhpcy5nZXRBY2hpZXZlbWVudEJ5TmFtZSgnZG93bmxvYWQtZGF0YScpLmNvbXBsZXRlZCA9PSB0cnVlICYmIHByb21wdF9kYXRhLmNvdW50IDwgMikgewogICAgICAgIHRoaXMuc2hvd1Byb21wdCgnZGF0YV9hbmFseXNpcycpOwogICAgICB9CgogICAgICBpZiAodG90YWxfc2Vzc2lvbl90aW1lID4gNTQwMDAwMCAmJiB0b3RhbF9zZXNzaW9uX3RpbWUgPCAxMDgwMDAwMCAmJiBwcm9tcHRfOTAuY291bnQgPCAxKSB7CiAgICAgICAgdGhpcy5zaG93UHJvbXB0KCdzZXNzaW9uX3RpbWVfOTAnKTsKICAgICAgfQoKICAgICAgaWYgKHRvdGFsX3Nlc3Npb25fdGltZSA+IDEwODAwMDAwKSB7CiAgICAgICAgdGhpcy5zaG93UHJvbXB0KCdzZXNzaW9uX3RpbWVfMTgwJyk7CiAgICAgIH0KCiAgICAgIHRoaXMuc2hvd1Byb21wdCgncmVwb3J0X2lzc3VlcycpOwogICAgfQogIH0pCn07"},{"version":3,"sources":["/home/david/practable/spinner-amax/ui/src/components/Prompts.vue"],"names":[],"mappings":"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","sourcesContent":["//Not currently used - replaced by RasaBot component\n\n\n<template>\n    <li class=\"nav-item dropdown\">\n        <button type='button' class='btn primary-colour dropdown-toggle' id='prompts-button' data-bs-toggle=\"dropdown\" data-bs-auto-close=\"false\" aria-expanded=\"false\" @click='setPromptUpdate(false)'>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" id='promptsmenubutton' width=\"32\" height=\"32\" fill=\"currentColor\" class=\"bi bi-chat-left-dots\" viewBox=\"0 0 16 16\">\n                    <path d=\"M14 1a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1H4.414A2 2 0 0 0 3 11.586l-2 2V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12.793a.5.5 0 0 0 .854.353l2.853-2.853A1 1 0 0 1 4.414 12H14a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\"/>\n                    <path d=\"M5 6a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0z\"/>\n                </svg>\n                <span v-if='getPromptUpdated' class=\"badge rounded-pill bg-danger\" id='prompt-notification' role=\"status\" aria-hidden=\"false\">{{ getAvailablePrompts.length }}<span class=\"visually-hidden\">unread messages</span></span>\n            </button>\n        \n        <ul class=\"dropdown-menu dropdown-menu-dark\" aria-labelledby=\"dropdownMenuClickable\">\n            <li><h4 class='text-muted text-center'>Survey questions</h4></li>\n\n            <div v-if='getAvailablePrompts.length > 0' style='max-height: 90vh; overflow: scroll;'>\n                <li v-for='item in getAvailablePrompts' :key='item.verbose' class='dropdown-item' @click.stop>\n                    \n                    <button class=\"btn btn-primary m-2\" type=\"button\" data-bs-toggle=\"collapse\" :data-bs-target=\"'#collapse' + item.name\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\n                        {{item.verbose}}\n                    </button>\n                    <div class=\"collapse\" :id=\"'collapse' + item.name\">\n                        <div class=\"card bg-secondary m-2\" style=\"min-width: 30vw\">\n                            \n                            <div class='card-header'>\n                                <h5>{{item.mainText}}</h5>\n                                <!-- Prompt statements -->\n                                <div v-if='item.type == \"prompt\"'>\n                                    <button type='button' :id='item.name + \"button\"' class='btn btn-primary ms-2 me-2' value='cleared' @click='updateResponse(item, item.name + \"button\")'>Clear</button>\n                                </div>\n                            </div>\n                            <!-- Likert style prompt questions -->\n                            <div v-if='item.type == \"likert\"' class=\"d-flex card-body row justify-content-center\">\n                                <p class='col-2 text-end'>{{item.minScale}}</p>\n                                <div class='d-flex col-6 form-check justify-content-center'>\n                                    <input type='radio' :id='item.name + \"check1\"' class='form-check-input radio-inline ms-3 me-3' value='-2' @change='updateResponse(item, item.name + \"check1\")'>\n                                    <input type='radio' :id='item.name + \"check2\"' class='form-check-input radio-inline ms-3 me-3' value='-1' @change='updateResponse(item, item.name + \"check2\")'>\n                                    <input type='radio' :id='item.name + \"check3\"' class='form-check-input radio-inline ms-3 me-3' value='0' @change='updateResponse(item, item.name + \"check3\")'>\n                                    <input type='radio' :id='item.name + \"check4\"' class='form-check-input radio-inline ms-3 me-3' value='1' @change='updateResponse(item, item.name + \"check4\")'>\n                                    <input type='radio' :id='item.name + \"check5\"' class='form-check-input radio-inline ms-3 me-3' value='2' @change='updateResponse(item, item.name + \"check5\")'>\n                                </div>\n                                <p class='col-2 text-start'>{{item.maxScale}}</p>\n                            </div>\n                            <!-- Likert style prompt questions with multiple questions-->\n                            <div v-if='item.type == \"likert_multiple\"' class=\"card-body text-center m-2\">\n                                <div class='row' v-for='(scale, index) in item.minScale' :key='scale'>\n                                    <p class='col-3 text-wrap'>{{scale}}</p>\n                                    <div class='d-flex col-6 justify-content-center form-check'>\n                                        <input type='radio' :id='scale + \"check1\"' class='form-check-input radio-inline ms-2 me-2' value='-2' @change='temp_multiple_response[index] = -2'>\n                                        <input type='radio' :id='scale + \"check2\"' class='form-check-input radio-inline ms-2 me-2' value='-1' @change='temp_multiple_response[index] = -1'>\n                                        <input type='radio' :id='scale + \"check3\"' class='form-check-input radio-inline ms-2 me-2' value='0' @change='temp_multiple_response[index] = 0'>\n                                        <input type='radio' :id='scale + \"check4\"' class='form-check-input radio-inline ms-2 me-2' value='1' @change='temp_multiple_response[index] = 1'>\n                                        <input type='radio' :id='scale + \"check5\"' class='form-check-input radio-inline ms-2 me-2' value='2' @change='temp_multiple_response[index] = 2'>\n                                    </div>\n                                    <p class='col-3 text-wrap'>{{item.maxScale[index]}}</p>\n                                </div>\n                                <button type='button' class='btn btn-primary' @click='updateMultipleResponse(item, temp_multiple_response)'>Submit</button>\n                            </div>\n                            <!-- Open text response -->\n                            <div v-if='item.type == \"text\"' class=\"card-body text-center row m-2\">\n                                <div class='col-12 text-center'>\n                                    <div class=\"input-group\">\n                                        <span class=\"input-group-text\">Response</span>\n                                        <textarea class=\"form-control\" :id='item.name + \"textinput\"' value='' aria-label=\"Text input\"></textarea>\n                                        <button class='btn btn-primary m-2' type='button' id='submit-text' @click='updateResponse(item, item.name + \"textinput\")'>Submit</button>\n                                    </div>\n                                </div>\n                            </div>\n                            <!-- Calculation -->\n                            <div v-if='item.type == \"calc\"' class=\"card-body text-center m-2\">\n                                <div class='text-center'>\n                                    <div class=\"input-group\">\n                                        <span class=\"input-group-text\">Answer</span>\n                                        <input type='text' class=\"form-control\" :id='item.name + \"calcinput\"' value='' aria-label=\"answer\">\n                                        <button class='btn btn-primary m-2' type='button' id='submit-answer' @click='updateResponse(item, item.name + \"calcinput\")'>Submit</button>\n                                    </div>\n                                </div>\n                            </div>\n                            \n                            <!-- Select question -->\n                            <div v-if='item.type == \"select\"' class=\"card-body text-center row m-2\">\n                                <div class='col-6 text-center form-check'>\n                                    <div v-for='option in item.options' :key='option'>\n                                        <input type='radio' :id='option + \"select\"' class='form-check-input radio-inline ms-2 me-2' :value='option' @change='updateResponse(item, option + \"select\")'>\n                                        <label class='form-check-label' :for='option'>{{ option }}</label>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n                    \n\n                </li>\n            </div>\n            <div v-else>\n                <div class=\"card bg-secondary m-2\" style=\"min-width: 30rem\">\n                    <div class='card-header'>\n                        <h5>No questions to complete at the moment.</h5>\n                    </div>\n                </div>\n            </div>\n            \n        </ul>\n    </li>\n\n\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\nimport { mapActions } from 'vuex';\n\nexport default {\n    name: 'Prompts',\n    data () {\n        return {\n            temp_multiple_response: [],\n        }\n    },\n    computed:{\n        ...mapGetters([\n            'getAvailablePrompts',\n            'getPromptUpdated',\n            'getNewPromptCount',\n            'getLogTotalTime',\n            'getPromptByName',\n            'getAchievementByName',\n            'getPrompts',\n            'getPromptsLoaded',\n            'getSessionExpired'\n        ]),\n        \n    },\n    mounted(){\n        //this.triggerPrompts();\n    },\n    watch:{\n        getPromptsLoaded(loaded){\n            if(loaded){\n                this.triggerPrompts();\n            }\n        },\n        getSessionExpired(expired){\n            if(expired){\n                this.$store.dispatch('setPromptsAvailable', false);\n            }\n        }\n    },\n    methods:{\n        ...mapActions([\n            'setPromptUpdate',\n            'setPromptResponse',\n            'showPrompt',\n        ]),\n        updateResponse(prompt, input_id){\n            let payload = {name: prompt.name, response: document.getElementById(input_id).value}\n            this.setPromptResponse(payload);\n            \n            this.$store.dispatch('setAchievementCompleted', 'survey-response');\n        },\n        updateMultipleResponse(prompt, response){\n            let payload = {name: prompt.name, response: response}\n            this.setPromptResponse(payload);\n            this.temp_multiple_response = [];\n            \n        },\n        triggerPrompts(){\n            let total_session_time = this.getLogTotalTime;\n            let prompt_rate = this.getPromptByName('rate_experience');\n            let prompt_ui = this.getPromptByName('rate_ui');\n            let prompt_improvements = this.getPromptByName('comment_improvements');\n            let prompt_data = this.getPromptByName('data_analysis');\n            let prompt_achievements = this.getPromptByName('rate-ach');\n            let prompt_90 = this.getPromptByName('session_time_90');\n\n            if((prompt_rate.count == 0 && total_session_time > 1800000) || (prompt_rate.count == 1 && total_session_time > 3600000) || (prompt_rate.count == 2 && total_session_time > 5400000)){\n              this.showPrompt('rate_experience');\n            } \n            if(this.getAchievementByName('speedRaw-step-input').completed && ((prompt_ui.count == 0 && total_session_time > 600000) || (prompt_ui.count == 1 && total_session_time > 1800000))){\n              this.showPrompt('rate_ui');\n            } \n            if((prompt_improvements.count == 0 && total_session_time > 1800000) || (prompt_improvements.count == 1 && total_session_time > 3600000) || (prompt_improvements.count == 2 && total_session_time > 5400000)){\n              this.showPrompt('comment_improvements');\n            }\n            if((prompt_achievements.count == 0 && total_session_time > 1800000) || (prompt_achievements.count == 1 && total_session_time > 3600000) || (prompt_achievements.count == 2 && total_session_time > 5400000)){\n              this.showPrompt('rate-ach');\n            }\n            if(this.getAchievementByName('speedRaw-step-input').completed == true && this.getAchievementByName('download-data').completed == true && prompt_data.count < 2){\n              this.showPrompt('data_analysis');\n            }\n            if(total_session_time > 5400000 && total_session_time < 10800000 && prompt_90.count < 1){\n                this.showPrompt('session_time_90');\n            }\n            if(total_session_time > 10800000){\n                this.showPrompt('session_time_180');\n            }\n            \n            this.showPrompt('report_issues');\n            \n        },\n    }\n}\n</script>\n\n<style scoped>\n#prompt-notification{\n  position: absolute;\n  top: 100;\n  right: 0;\n}\n</style>"],"sourceRoot":""}]}